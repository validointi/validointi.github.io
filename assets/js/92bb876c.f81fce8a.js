"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[347],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>c});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=p(n),c=r,g=u["".concat(s,".").concat(c)]||u[c]||m[c]||o;return n?a.createElement(g,i(i({ref:t},d),{},{components:n})):a.createElement(g,i({ref:t},d))}));function c(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},8230:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const o={sidebar_position:1},i="Getting started",l={unversionedId:"getting_started",id:"getting_started",title:"Getting started",description:'Before we dive deep into the libary, we are having a "really" simple example of tempalte forms. This so that you have a base to work with.',source:"@site/docs/getting_started.md",sourceDirName:".",slug:"/getting_started",permalink:"/docs/getting_started",draft:!1,editUrl:"https://github.com/validointi/validointi/tree/main/packages/create-docusaurus/templates/shared/docs/getting_started.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"Core concepts",permalink:"/docs/core_concept"}},s={},p=[{value:"Quick intro into template forms",id:"quick-intro-into-template-forms",level:2},{value:"Hooking up Validointi",id:"hooking-up-validointi",level:2},{value:"Using the Validointi",id:"using-the-validointi",level:2},{value:"Test suite",id:"test-suite",level:3},{value:"Validation function",id:"validation-function",level:3},{value:"Example app",id:"example-app",level:3}],d={toc:p};function m(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"getting-started"},"Getting started"),(0,r.kt)("p",null,'Before we dive deep into the libary, we are having a "really" simple example of tempalte forms. This so that you have a base to work with.'),(0,r.kt)("h2",{id:"quick-intro-into-template-forms"},"Quick intro into template forms"),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"We expect that you have created and workerd with an Angular application before. If you don't have any experience we would recommend you to go to the following link and dive through the ",(0,r.kt)("a",{parentName:"p",href:"https://angular.io/tutorial"},"Tour of Heroes"),".")),(0,r.kt)("p",null,"We start out with the creation a new component where we are going to implement our form."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"npx ng generate c --standalone templateForm\n")),(0,r.kt)("p",null,"Open up the ",(0,r.kt)("inlineCode",{parentName:"p"},"template-form.component.html")," and remove the HTML that is in there and replace it with the following."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<form validationId="sample-data" (ngSubmit)="onSubmit($any(form))">\n  <label for="name">\n    <span>Your name</span>\n  </label>\n  <input\n    type="text"\n    name="name"\n    placeholder="Fill in your name"\n    [(ngModel)]="model.name"\n  />\n  <input type="submit" value="Submit" [disabled]="form.invalid" />\n</form>\n')),(0,r.kt)("p",null,"Next step is to open up the ",(0,r.kt)("inlineCode",{parentName:"p"},"template-form.component.ts")," file and import the ",(0,r.kt)("inlineCode",{parentName:"p"},"FormsModule"),". Second step is to add a new property called ",(0,r.kt)("inlineCode",{parentName:"p"},"model")," and assign it as show below."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'import { Component, OnInit } from "@angular/core";\nimport { CommonModule } from "@angular/common";\nimport { FormsModule } from "@angular/forms";\n\n@Component({\n  selector: "app-template-form",\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  templateUrl: "./template-form.component.html",\n  styleUrls: ["./template-form.component.css"],\n})\nexport class TemplateFormComponent implements OnInit {\n  model = { name: "This can be your own name" };\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  onSubmit(data: any) {\n    console.error(data);\n  }\n}\n')),(0,r.kt)("p",null,"The last thing we are going to do is making sure that we can see the state of a form field. Angular uses his own custom classes for this and we are going to sprinkle a little bit of CSS in our component."),(0,r.kt)("p",null,"Open up the ",(0,r.kt)("inlineCode",{parentName:"p"},"template-form.component.css")," and add the following code:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-css"},".ng-invalid.ng-dirty:not(form) {\n  border: 2px solid red;\n}\n.ng-valid.ng-dirty:not(form) {\n  border: 2px solid lightgreen;\n}\n")),(0,r.kt)("p",null,"If we not go to our application by running ",(0,r.kt)("inlineCode",{parentName:"p"},"ng serve")," we will see a simple input filled in with ",(0,r.kt)("em",{parentName:"p"},"This can be your own name"),". Removing this value will add a red border witch indicates is is ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"invalid"))," and adding a value to it will say that it is ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"valid")),"."),(0,r.kt)("h2",{id:"hooking-up-validointi"},"Hooking up Validointi"),(0,r.kt)("p",null,"Now that we have a basic concept of a model and a validation library we wil explain how to hookup the library to a form.\nFirst we are going to install ",(0,r.kt)("a",{parentName:"p",href:"https://vestjs.dev"},"Vest"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm install vest\n")),(0,r.kt)("p",null,"Now install the library"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm install @validointi/core\n")),(0,r.kt)("h2",{id:"using-the-validointi"},"Using the Validointi"),(0,r.kt)("p",null,"When everything is installed we are ready to use the library in our project.\nValidointi canbe used (as mentioned) with a variaty of different schema/ model validators. We are using Vest in our example and Vest leans on a test suite so let us write a test suite that we can add to the form."),(0,r.kt)("h3",{id:"test-suite"},"Test suite"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'const suite = create((data = {}) => {\n  test("name", "Name is required", () => {\n    enforce(data.name).isNotBlank();\n  });\n\n  test("name", "Name must be at least 3 characters long", () => {\n    enforce(data.name).longerThan(2);\n  });\n});\n')),(0,r.kt)("p",null,"To use this ",(0,r.kt)("inlineCode",{parentName:"p"},"suite")," we need to register it to the library. This will go into two steps."),(0,r.kt)("p",null,"Step one, make a generic function that is called by the library when validation is needed. This function has the purpose to call the model validation and map the errors to ",(0,r.kt)("inlineCode",{parentName:"p"},"Promise<ValidationErrors>")),(0,r.kt)("h3",{id:"validation-function"},"Validation function"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"async function validateSampleData(data: any): Promise<ValidationErrors> {\n  const errors = await suite(data).getErrors();\n  return Object.entries(errors).reduce((acc, [key, err]) => {\n    acc[key] = err;\n    return acc;\n  }, {} as ValidationErrors);\n}\n")),(0,r.kt)("p",null,"We can now safely register our validation function to our validation registery.\nThe validation registry is a place where N validation functions live ready to validate a specific set of data.\nRegistering a validation function is easy, just inject the registry and call ",(0,r.kt)("inlineCode",{parentName:"p"},"registerValidator")," where you put in a unique key and the validation function."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'#vr = inject(ValidatorRegistryService);\n\nvalidate = this.#vr.registerValidator("sample-data", validateSampleData);\n')),(0,r.kt)("p",null,"Add the ",(0,r.kt)("inlineCode",{parentName:"p"},"ValidatorDirective")," to the module/ standalone component."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"...\nimport { ValidatorDirective } from '@validointi/core';\n\n    imports: [CommonModule, FormsModule, ValidatorDirective],\n")),(0,r.kt)("p",null,"And we are done, now open up a browser and navigate to the application.\nChange the default ",(0,r.kt)("inlineCode",{parentName:"p"},"name")," value to a empty string and see the red border appear.\nIf we now look at the control is self we will see that it contains an error."),(0,r.kt)("h3",{id:"example-app"},"Example app"),(0,r.kt)("iframe",{height:"500",style:{width:"100%"},src:"https://stackblitz.com/edit/validointi-sample?embed=1&file=src/app/template-form/template-form.component.ts"}))}m.isMDXComponent=!0}}]);