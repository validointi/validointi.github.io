"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[934],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>m});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),p=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(r),m=n,f=u["".concat(s,".").concat(m)]||u[m]||d[m]||o;return r?a.createElement(f,i(i({ref:t},c),{},{components:r})):a.createElement(f,i({ref:t},c))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:n,i[1]=l;for(var p=2;p<o;p++)i[p]=r[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}u.displayName="MDXCreateElement"},1387:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var a=r(7462),n=(r(7294),r(3905));const o={sidebar_position:2,title:"Core concepts",description:"Understand the core concepts of  validointi."},i="Core Concept",l={unversionedId:"core_concept",id:"core_concept",title:"Core concepts",description:"Understand the core concepts of  validointi.",source:"@site/docs/core_concept.md",sourceDirName:".",slug:"/core_concept",permalink:"/docs/core_concept",draft:!1,editUrl:"https://github.com/validointi/validointi/tree/main/packages/create-docusaurus/templates/shared/docs/core_concept.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"Core concepts",description:"Understand the core concepts of  validointi."},sidebar:"tutorialSidebar",previous:{title:"Getting started",permalink:"/docs/getting_started"}},s={},p=[{value:"Model",id:"model",level:2},{value:"Validation library",id:"validation-library",level:2},{value:"Adapters",id:"adapters",level:2}],c={toc:p};function d(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"core-concept"},"Core Concept"),(0,n.kt)("p",null,"The core concept of Validointi is that you use a model, a validation library by your choice and ",(0,n.kt)("strong",{parentName:"p"},"one")," directive that will make your template form have super powers."),(0,n.kt)("h2",{id:"model"},"Model"),(0,n.kt)("p",null,"A model contains information and it shouldn't have any behavior. This model contains the information that we will use in our form. Below an example off a simple model that represants a simple form."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"{\n    name: 'Your name',\n    email: 'info@example.org',\n    password: 'a-p-a-s-s-w-o-r-d'\n    confirmPassword: 'a-p-a-s-s-w-o-r-d'\n}\n")),(0,n.kt)("h2",{id:"validation-library"},"Validation library"),(0,n.kt)("p",null,"When using Angular we have a set off default validators like: ",(0,n.kt)("inlineCode",{parentName:"p"},"required"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"min"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"max"),". These are HTML5 validations hooked up to Angular, Angular uses several directives to support these validations in template driven forms.\nWhen a form is getting ",(0,n.kt)("strong",{parentName:"p"},"more"),' complex we need custom "validation", here it is where validation librarys come in. Validation library have a purpose, make validation easy! There is a brought set of validation / schema validator libraries, below a set of libraries that could be intressting, in our documentation we always will look at ',(0,n.kt)("a",{parentName:"p",href:"https://vestjs.dev"},"Vest"),"."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://vestjs.dev"},"Vest")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://joi.dev"},"Joi")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://ajv.js.org"},"Ajv"))),(0,n.kt)("h2",{id:"adapters"},"Adapters"),(0,n.kt)("p",null,"Adapters are simple functions that do some heavy lifting for you with one of the above mentioned validation libraries. A adapter can be used when registering the validation set.\nThis will look something like"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},'validate = this.#vr.registerValidator("sample-data", createSomeLibAdapter(suite));\n')),(0,n.kt)("admonition",{type:"caution"},(0,n.kt)("p",{parentName:"admonition"},"At this moment we ",(0,n.kt)("strong",{parentName:"p"},"ONLY")," support a Vest Adapter ",(0,n.kt)("inlineCode",{parentName:"p"},"createVestAdapter"))))}d.isMDXComponent=!0}}]);